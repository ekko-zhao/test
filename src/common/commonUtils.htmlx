<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head>
<body>
	<dialog id="progressDialog" canceledOnTouchOutside="true">
	<div width="360" height="640" layout="VBox" vAlign="middle"
		hAlign="center">
		<progress width="50" height="50"></progress>
		<input id="progressDialogLabel" type="label" fontSize="18"
			color="#ffffff" height="40" />
	</div>
	</dialog>
	
	<dialog id="dialog">
	<div id="div" layout="VBox" hAlign="center" backgroundColor="#ffffff"
		height="100" width="300" cornerRadius="10" borderColor="#D9D9D9"
		borderWidth="1px">
		<div width="100%" height="100%"></div>
		<input id="dialogtext" type="label" value=" " hAlign="center"
			width="180" />
		<div width="100%" height="100%"></div>
		<div width="100%" height="1px" backgroundColor="#D9D9D9" />
		<input type="button" width="100%" height="35" value="关闭"
			onClick="closeDialog" color="#4ca1fe" backgroundColor="#ffffff"
			fontSize="20" />
	</div>
	</dialog>
	<dialog id="gotoLoginDialog">
		<div layout="VBox"  hAlign="center" backgroundColor="#ffffff" height="100" width="200" cornerRadius="10" borderColor="#D9D9D9" borderWidth="1px" >
			<div width="100%" height="100%"></div>
			<input type="label" value="用户状态过期，请重新登录" hAlign="center" width="180" /> 
			<div width="100%" height="100%"></div>
			<div width="100%" height="1px" backgroundColor="#D9D9D9" />	
			<input type="button" width="100%" height="35" value="确定" onClick="closeGotoLoginDialog" color="#4ca1fe"  backgroundColor="#ffffff" fontSize="20" /> 
		</div>
	</dialog>
</body>
<script>
	function showGotoLoginDialog(){
		gotoLoginDialog.show();
	}
	
	function closeGotoLoginDialog(){
		gotoLoginDialog.close
		$M.page.goTo('/login.html', null, true);
	}

	var preference = new $M.Preferences();
	preference.open('workbench');

	var ACCESS_TOKEN = preference.get("access_token");
	
	var databaseName = "Mobile";
	var database = Emp.Database.openDatabase(databaseName);

	var CURRENT_USER = {};
	var user_str = preference.get('CURRENT_USER');
	if (user_str) {
		CURRENT_USER = Utils.stringToJson(user_str);
	} else {
		//loadUserInfo();
	}

	function dismissProgress() {
		progressDialog.close();
	}

	function showProgress() {
		progressDialogLabel.setValue();
		progressDialog.show();
	}

	function showProgress(tip) {
		tip = tip == null ? '' : tip;
		progressDialogLabel.setValue(tip);
		progressDialog.show();
	}

	function closeDialog() {
		dialog.close();
	}

	function networkCheck(ajax) {
		if (util.isNetworkAvailable()) {
			ajax.submit();
		} else {
			//util.toast('当前网络不可用！');
			setTimeout(function() {
				dismissProgress();
			}, 2000);
		}
	}

	/**
	 * 判断对象是否为空
	 */
	function isEmptyObject(obj) {
		for (var key in obj) {
			return false;
		}
		return true;
	}
	/**
	 * 统一ajax请求
	 * 当token失效时需要重新获取新的token，带上新的token重新发送请求
	 */
	var AjaxUtil = {};
	AjaxUtil.TYPE_POST = "post";
	AjaxUtil.TYPE_GET = "get";
	AjaxUtil.submit = function(funcUrl, data, ajaxType, successFn, failureFn){
		var param = {};
		var ajax = new $M.Ajax();
		var ActionUrl = funcUrl;
		//处理头部
				
		//处理参数
		if(ajaxType == AjaxUtil.TYPE_POST){
			if(data.postData!=null||data.postData!=undefined){
				ajax.setPostData(Utils.jsonToString(data.postData));
			}else{
				if(ActionUrl != '/pmtoken'){
					//统一添加token
					ajax.add('access_token',ACCESS_TOKEN);
				}
				for ( var a in data) {
					ajax.add(a, data[a]);
				}
			}						
		}else{			
			if(!isEmptyObject(data)){
				ActionUrl = ActionUrl + "?";
				//添加统一token
				ActionUrl = ActionUrl + "access_token=" + ACCESS_TOKEN + "&";
				for ( var a in data){
					ActionUrl = ActionUrl + a + "=" + data[a] + "&";
				}
				ActionUrl = ActionUrl.substring(0, ActionUrl.length-1);
			}
		}
	
		//处理路径
		ajax.setAction(ActionUrl);
		if (Utils.isNetworkAvailable()) {
			ajax.submit(function(result){
// 				log(result);
				var resultData = Utils.stringToJson(result);
				if(resultData.errCode=="103"){
					//token失效，重新获取token
					var newTokenAjax = new $M.Ajax();
					var newTokenUserid = preference.get('userid');
					var newTokenPmsecret = preference.get('password');
					newTokenAjax.setAction('/pmtoken');
					newTokenAjax.add('userid', newTokenUserid);
					newTokenAjax.add('pmsecret', newTokenPmsecret);
					newTokenAjax.add('imei',Utils.getImei());
					newTokenAjax.add('msgtoken', Utils.getMessageToken());
					newTokenAjax.submit(function(result){
						var newResultData = Utils.stringToJson(result);
						var access_token = newResultData.access_token;
						preference.put("access_token", access_token);
						ACCESS_TOKEN = access_token;
						AjaxUtil.submit(funcUrl, data, ajaxType, successFn, failureFn);
					}, function(errCode, errMsg){
						log(errCode + " " + errMsg);
						failureFn(errCode, errMsg);
					})
				}else if(resultData.errCode=="102"){
					//服务端无token,重新登录
					showGotoLoginDialog();
				}else if(resultData.exception){
					var exception = Utils.jsonToString(resultData.exception);
					if(exception.code=="12101001"){
						//showGotoLoginDialog();
						var newTokenAjax = new $M.Ajax();
						var newTokenUserid = preference.get('userid');
						var newTokenPmsecret = preference.get('password');
						newTokenAjax.setAction('/pmtoken');
						newTokenAjax.add('userid', newTokenUserid);
						newTokenAjax.add('pmsecret', newTokenPmsecret);
						newTokenAjax.add('imei',Utils.getImei());
						newTokenAjax.add('msgtoken', Utils.getMessageToken());
						newTokenAjax.submit(function(result){
							var newResultData = Utils.stringToJson(result);
							var access_token = newResultData.access_token;
							preference.put("access_token", access_token);
							ACCESS_TOKEN = access_token;
							ajax.submit(function(result){
								AjaxUtil.submit(funcUrl, data, ajaxType, successFn, failureFn);
							})
						}, function(errCode, errMsg){
							log(errCode + " " + errMsg);
							failureFn(errCode, errMsg);
						})
					}else{
						successFn(result);
					}
				}else{
					successFn(result);
				}			
			}, function(errCode, errMsg){
				log(errCode + " " + errMsg);
				failureFn(errCode, errMsg);
			});
		} else {
			toast('当前网络不可用');
		}
	}
	
	/**
	 *  获取当前登录的用户信息方便邮件使用
	 * 
	 */
	function loadUserInfo() {
		var ajaxData = {};
		ajaxData.userid = preference.get('userid');
		AjaxUtil.submit('/com.primeton.pmbusiness.contacts.coframeComponent.getEmployee.biz.ext', ajaxData, AjaxUtil.TYPE_POST, function(args) {
			var info = Utils.stringToJson(args);
			if (info.currentUser[0]) {
				preference.put('CURRENT_USER', Utils.jsonToString(info.currentUser[0]));
				CURRENT_USER = info.currentUser[0];
			} else {
				preference.put('CURRENT_USER', '');
				CURRENT_USER = {};
			}
		}, function(errCode, errMsg) {
			//获取token失败
		});
	}
	
	//进行统计分析
	function statisticsAppInfo(userid,username,appid,appname,version,type) {
		var ajaxData = {};
		ajaxData.userid =userid;
		ajaxData.username =username;
		ajaxData.appid =appid;
		ajaxData.appname =appname;
		ajaxData.version =version;
		ajaxData.type =type;
		ajaxData.phonemodel = Utils.getPhoneModel();
		if($M.isAndroid){
			ajaxData.modelOS = "Android";
		}else{
			ajaxData.modelOS = "IOS";
		}
		AjaxUtil.submit('/com.primeton.components.statistics.statistacscomponent.statistics.biz.ext', ajaxData, AjaxUtil.TYPE_POST, function(args) {
		
		}, function(errCode, errMsg) {
			//获取token失败
		});
	}
</script>
</html>
